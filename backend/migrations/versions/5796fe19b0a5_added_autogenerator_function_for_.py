"""added autogenerator function for relevant ids.

Revision ID: 5796fe19b0a5
Revises: 98481e3ffbb9
Create Date: 2024-10-23 13:30:21.170737

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '5796fe19b0a5'
down_revision: Union[str, None] = '98481e3ffbb9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('customer_auth_ibfk_1', 'customer_auth', type_='foreignkey')
    op.drop_constraint('guestservices_ibfk_1', 'guestservices', type_='foreignkey')
    op.drop_constraint('sales_orders_ibfk_1', 'sales_orders', type_='foreignkey')
    # op.drop_constraint('tickets_ibfk_1', 'tickets', type_='foreignkey')
    op.drop_constraint('visits_ibfk_1', 'visits', type_='foreignkey')
    op.drop_constraint('ride_usage_ibfk_1', 'ride_usage', type_='foreignkey')
    op.drop_constraint('ride_usage_ibfk_2', 'ride_usage', type_='foreignkey')
    op.drop_constraint('workorder_ibfk_2', 'workorder', type_='foreignkey')
    # op.drop_constraint('visit_tickets_ibfk_2', 'visit_tickets', type_='foreignkey')
    op.drop_constraint('rentals_ibfk_2', 'rentals', type_='foreignkey')
    # op.drop_constraint('rentals_ibfk_1', 'rentals', type_='foreignkey')

    op.alter_column('customer_auth', 'customer_id',
               existing_type=mysql.INTEGER(),
               type_=mysql.VARCHAR(length=12),
               existing_comment='Foreign key to Customers table, some customers may have user accounts',
               existing_nullable=True)
    op.alter_column('customers', 'customer_id',
               existing_type=mysql.INTEGER(),
               type_=mysql.VARCHAR(length=12),
               existing_comment='Unique ID for each customer',
               existing_nullable=False)
    op.alter_column('entertainment', 'show_id',
               existing_type=mysql.INTEGER(),
               type_=mysql.VARCHAR(length=12),
               existing_comment='Unique identifier for each show (primary key)',
               existing_nullable=False)
    op.alter_column('fooditems', 'food_id',
               existing_type=mysql.INTEGER(),
               type_=mysql.VARCHAR(length=12),
               existing_comment='Unique identifier for each food item (primary key)',
               existing_nullable=False)
    op.alter_column('guestservices', 'service_request_id',
               existing_type=mysql.INTEGER(),
               type_=mysql.VARCHAR(length=12),
               existing_comment='Unique identifier for each guest service request (primary key)',
               existing_nullable=False)
    op.alter_column('guestservices', 'customer_id',
               existing_type=mysql.INTEGER(),
               type_=mysql.VARCHAR(length=12),
               existing_comment='Unique identifier for each guest service request (primary key)',
               existing_nullable=False)
    op.alter_column('rentals', 'customer_id',
               existing_type=mysql.INTEGER(),
               type_=mysql.VARCHAR(length=12),
               existing_comment='ID of the customer renting the item, linked to Customers table',
               existing_nullable=False)
    op.alter_column('ride_usage', 'customer_id',
               existing_type=mysql.INTEGER(),
               type_=mysql.VARCHAR(length=12),
               existing_comment='Customer ID linked to the customer who used the ride',
               existing_nullable=False)
    op.alter_column('rides', 'ride_id',
               existing_type=mysql.INTEGER(),
               type_=mysql.VARCHAR(length=12),
               existing_nullable=False)
    op.alter_column('sales_orders', 'customer_id',
               existing_type=mysql.INTEGER(),
               type_=mysql.VARCHAR(length=12),
               existing_comment='Foreign key linking to Customers',
               existing_nullable=False)
    op.alter_column('tickets', 'ticket_id',
               existing_type=mysql.INTEGER(),
               type_=mysql.VARCHAR(length=12),
               existing_comment='Unique identifier for each ticket',
               existing_nullable=False)
    op.alter_column('tickets', 'customer_id',
               existing_type=mysql.INTEGER(),
               type_=mysql.VARCHAR(length=12),
               existing_comment='Foreign key linking the ticket to the customer who purchased it',
               existing_nullable=False)
    op.alter_column('visit_tickets', 'ticket_id',
               existing_type=mysql.INTEGER(),
               type_=mysql.VARCHAR(length=12),
               existing_comment='The unique identifier for the ticket',
               existing_nullable=False)
    op.alter_column('ride_usage', 'ride_id',
               existing_type=mysql.INTEGER(),
               type_=mysql.VARCHAR(length=12),
               existing_comment='Ride ID linked to the specific ride used',
               existing_nullable=False)
    op.alter_column('visits', 'customer_id',
               existing_type=mysql.INTEGER(),
               type_=mysql.VARCHAR(length=12),
               existing_comment='Foreign key referencing the customer who made the visit',
               existing_nullable=False)
    op.alter_column('workorder', 'ride_id',
               existing_type=mysql.INTEGER(),
               type_=mysql.VARCHAR(length=12),
               existing_comment='Foreign key referencing the customer who made the visit',
               existing_nullable=False)
    
    op.create_foreign_key('customer_auth_ibfk_1', 'customer_auth', 'customers', ['customer_id'], ['customer_id'])
    op.create_foreign_key('guestservices_ibfk_1', 'guestservices', 'customers', ['customer_id'], ['customer_id'])
    op.create_foreign_key('sales_orders_ibfk_1', 'sales_orders', 'customers', ['customer_id'], ['customer_id'])
    # op.create_foreign_key('tickets_ibfk_1', 'tickets', 'customers', ['customer_id'], ['customer_id'])
    op.create_foreign_key('visits_ibfk_1', 'visits', 'customers', ['customer_id'], ['customer_id'])
    op.create_foreign_key('ride_usage_ibfk_1', 'ride_usage', 'customers', ['customer_id'], ['customer_id'])
    op.create_foreign_key('ride_usage_ibfk_2', 'ride_usage', 'rides', ['ride_id'], ['ride_id'])
    op.create_foreign_key('workorder_ibfk_2', 'workorder', 'rides', ['ride_id'], ['ride_id'])
    op.create_foreign_key('rentals_ibfk_2', 'rentals', 'customers', ['customer_id'], ['customer_id'])
    # op.create_foreign_key('visit_tickets_ibfk_2', 'visit_tickets', 'customers', ['ticket_id'], ['ticket_id'])
    # op.create_foreign_key('rentals_ibfk_1', 'rentals', 'items', ['item_id'], ['customer_id'])

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('visits', 'customer_id',
               existing_type=mysql.VARCHAR(length=12),
               type_=mysql.INTEGER(),
               existing_comment='Foreign key referencing the customer who made the visit',
               existing_nullable=False)
    op.alter_column('visit_tickets', 'ticket_id',
               existing_type=mysql.VARCHAR(length=12),
               type_=mysql.INTEGER(),
               existing_comment='The unique identifier for the ticket',
               existing_nullable=False)
    op.alter_column('tickets', 'customer_id',
               existing_type=mysql.VARCHAR(length=12),
               type_=mysql.INTEGER(),
               existing_comment='Foreign key linking the ticket to the customer who purchased it',
               existing_nullable=False)
    op.alter_column('tickets', 'ticket_id',
               existing_type=mysql.VARCHAR(length=12),
               type_=mysql.INTEGER(),
               existing_comment='Unique identifier for each ticket',
               existing_nullable=False)
    op.alter_column('sales_orders', 'customer_id',
               existing_type=mysql.VARCHAR(length=12),
               type_=mysql.INTEGER(),
               existing_comment='Foreign key linking to Customers',
               existing_nullable=False)
    op.alter_column('rides', 'ride_id',
               existing_type=mysql.VARCHAR(length=12),
               type_=mysql.INTEGER(),
               existing_nullable=False)
    op.alter_column('ride_usage', 'customer_id',
               existing_type=mysql.VARCHAR(length=12),
               type_=mysql.INTEGER(),
               existing_comment='Customer ID linked to the customer who used the ride',
               existing_nullable=False)
    op.alter_column('rentals', 'customer_id',
               existing_type=mysql.VARCHAR(length=12),
               type_=mysql.INTEGER(),
               existing_comment='ID of the customer renting the item, linked to Customers table',
               existing_nullable=False)
    op.alter_column('guestservices', 'service_request_id',
               existing_type=mysql.VARCHAR(length=12),
               type_=mysql.INTEGER(),
               existing_comment='Unique identifier for each guest service request (primary key)',
               existing_nullable=False)
    op.alter_column('fooditems', 'food_id',
               existing_type=mysql.VARCHAR(length=12),
               type_=mysql.INTEGER(),
               existing_comment='Unique identifier for each food item (primary key)',
               existing_nullable=False)
    op.alter_column('entertainment', 'show_id',
               existing_type=mysql.VARCHAR(length=12),
               type_=mysql.INTEGER(),
               existing_comment='Unique identifier for each show (primary key)',
               existing_nullable=False)
    op.alter_column('customers', 'customer_id',
               existing_type=mysql.VARCHAR(length=12),
               type_=mysql.INTEGER(),
               existing_comment='Unique ID for each customer',
               existing_nullable=False)
    op.alter_column('customer_auth', 'customer_id',
               existing_type=mysql.VARCHAR(length=12),
               type_=mysql.INTEGER(),
               existing_comment='Foreign key to Customers table, some customers may have user accounts',
               existing_nullable=True)
    # ### end Alembic commands ###
