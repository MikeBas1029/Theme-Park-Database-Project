"""made employee id nullable for guest services.

Revision ID: a7f6cf340831
Revises: 35656f9d3aa4
Create Date: 2024-10-24 08:16:19.369496

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'a7f6cf340831'
down_revision: Union[str, None] = '35656f9d3aa4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_constraint('customer_auth_ibfk_1', 'customer_auth', type_='foreignkey')
    # op.create_foreign_key('customer_auth_ibfk_1', 'customer_auth', 'customers', ['customer_id'], ['customer_id'], ondelete='SET NULL')
    # op.alter_column('guestservices', 'customer_id',
    #            existing_type=mysql.VARCHAR(length=12),
    #            comment='Foreign key linking to the CustomerID from the customers table',
    #            existing_comment='Unique identifier for each guest service request (primary key)',
    #            existing_nullable=False)
    # op.create_foreign_key('rentals_ibfk_1', 'rentals', 'items', ['item_id'], ['sku'])
    # op.create_foreign_key('tickets_ibfk_1', 'tickets', 'customers', ['customer_id'], ['customer_id'])
    op.create_foreign_key('visit_tickets_ibfk_2', 'visit_tickets', 'tickets', ['ticket_id'], ['ticket_id'])
    op.alter_column('workorder', 'ride_id',
               existing_type=mysql.VARCHAR(length=12),
               nullable=True,
               comment='Foreign key to the ride being serviced, if applicable.',
               existing_comment='Foreign key referencing the customer who made the visit')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('workorder', 'ride_id',
               existing_type=mysql.VARCHAR(length=12),
               nullable=False,
               comment='Foreign key referencing the customer who made the visit',
               existing_comment='Foreign key to the ride being serviced, if applicable.')
    op.drop_constraint(None, 'visit_tickets', type_='foreignkey')
    op.drop_constraint(None, 'tickets', type_='foreignkey')
    op.drop_constraint(None, 'rentals', type_='foreignkey')
    op.alter_column('guestservices', 'customer_id',
               existing_type=mysql.VARCHAR(length=12),
               comment='Unique identifier for each guest service request (primary key)',
               existing_comment='Foreign key linking to the CustomerID from the customers table',
               existing_nullable=False)
    op.drop_constraint(None, 'customer_auth', type_='foreignkey')
    op.create_foreign_key('customer_auth_ibfk_1', 'customer_auth', 'customers', ['customer_id'], ['customer_id'])
    # ### end Alembic commands ###
