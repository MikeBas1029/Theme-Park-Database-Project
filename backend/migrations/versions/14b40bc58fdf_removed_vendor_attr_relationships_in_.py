"""removed vendor attr/relationships in invoices and fixed po number dtype mismatches in child tables.

Revision ID: 14b40bc58fdf
Revises: 54ec4dbdd41b
Create Date: 2024-10-23 07:35:01.634077

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '14b40bc58fdf'
down_revision: Union[str, None] = '54ec4dbdd41b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Drop foreign key constraints referencing po_number and order_id
    op.drop_constraint('invoice_ibfk_1', 'invoice', type_='foreignkey')
    op.drop_constraint('orderdetails_ibfk_1', 'orderdetails', type_='foreignkey')
    op.drop_constraint('purchaseorderitems_ibfk_1', 'purchaseorderitems', type_='foreignkey')

    # Alter the data types for the necessary columns
    op.alter_column('invoice', 'po_number',
               existing_type=mysql.INTEGER(),
               type_=mysql.VARCHAR(length=12),
               existing_comment='Foreign key linking to the PurchaseOrders table (purchase order number)',
               existing_nullable=False)

    op.alter_column('orderdetails', 'order_id',
               existing_type=mysql.INTEGER(),
               type_=mysql.VARCHAR(length=10),
               existing_comment='ID of the related purchase order',
               existing_nullable=False)

    op.alter_column('purchaseorderitems', 'poid',
               existing_type=mysql.INTEGER(),
               type_=mysql.VARCHAR(length=10),
               existing_comment='Foreign key to the Purchase Order table.',
               existing_nullable=False)

    op.alter_column('purchaseorders', 'order_id',
               existing_type=mysql.INTEGER(),
               type_=mysql.VARCHAR(length=12),
               existing_comment='Unique ID for each purchase order',
               existing_nullable=False)

    # Recreate foreign key constraints
    op.create_foreign_key('invoice_ibfk_1', 'invoice', 'purchaseorders', ['po_number'], ['order_id'])
    op.create_foreign_key('orderdetails_ibfk_1', 'orderdetails', 'purchaseorders', ['order_id'], ['order_id'])
    op.create_foreign_key('purchaseorderitems_ibfk_1', 'purchaseorderitems', 'purchaseorders', ['poid'], ['order_id'])

    # Drop the vendor_id column and index if still needed
    op.drop_index('idx_vendor_id', table_name='invoice')
    op.drop_column('invoice', 'vendor_id')


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('purchaseorders', 'order_id',
               existing_type=mysql.VARCHAR(length=12),
               type_=mysql.INTEGER(),
               existing_comment='Unique ID for each purchase order',
               existing_nullable=False)
    op.alter_column('purchaseorderitems', 'poid',
               existing_type=mysql.VARCHAR(length=10),
               type_=mysql.INTEGER(),
               existing_comment='Foreign key to the Purchase Order table.',
               existing_nullable=False)
    op.alter_column('orderdetails', 'order_id',
               existing_type=mysql.VARCHAR(length=10),
               type_=mysql.INTEGER(),
               existing_comment='ID of the related purchase order',
               existing_nullable=False)
    op.add_column('invoice', sa.Column('vendor_id', mysql.INTEGER(), autoincrement=False, nullable=False, comment='Foreign key linking to the VendorID from the vendors table'))
    op.drop_constraint(None, 'invoice', type_='foreignkey')
    op.create_foreign_key('invoice_ibfk_1', 'invoice', 'vendors', ['vendor_id'], ['vendor_id'])
    op.create_index('idx_vendor_id', 'invoice', ['vendor_id'], unique=False)
    op.alter_column('invoice', 'po_number',
               existing_type=mysql.VARCHAR(length=12),
               type_=mysql.INTEGER(),
               existing_comment='Foreign key linking to the PurchaseOrders table (purchase order number)',
               existing_nullable=False)
    # ### end Alembic commands ###
